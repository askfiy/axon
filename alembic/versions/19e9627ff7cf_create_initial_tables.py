"""Create initial tables

Revision ID: 19e9627ff7cf
Revises: 
Create Date: 2025-07-31 22:39:57.561478

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '19e9627ff7cf'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tasks_metadata',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('owner', sa.String(length=255), nullable=False, comment='任务所有者'),
    sa.Column('owner_timezone', sa.String(length=255), server_default=sa.text("'UTC'"), nullable=False, comment='所有者所在时区'),
    sa.Column('keywords', sa.Text(), nullable=False, comment='关键字信息'),
    sa.Column('original_user_input', sa.Text(), nullable=False, comment='原始用户输入'),
    sa.Column('planning', sa.Text(), nullable=False, comment='执行规划'),
    sa.Column('description', sa.Text(), nullable=False, comment='描述信息'),
    sa.Column('accept_criteria', sa.Text(), nullable=False, comment='验收标准'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='更新时间'),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True, comment='删除时间'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('0'), nullable=False, comment='0：未删除 1：已删除'),
    sa.PrimaryKeyConstraint('id'),
    comment='任务元信息表'
    )
    op.create_index('idx_keywords_fulltext', 'tasks_metadata', ['keywords'], unique=False, mysql_prefix='FULLTEXT')
    op.create_index(op.f('ix_tasks_metadata_created_at'), 'tasks_metadata', ['created_at'], unique=False)
    op.create_index(op.f('ix_tasks_metadata_is_deleted'), 'tasks_metadata', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_tasks_metadata_owner'), 'tasks_metadata', ['owner'], unique=False)
    op.create_index(op.f('ix_tasks_metadata_updated_at'), 'tasks_metadata', ['updated_at'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False, comment='任务的名称'),
    sa.Column('identifier', sa.CHAR(length=36), server_default=sa.text('UUID()'), nullable=False, comment='任务的标识符'),
    sa.Column('deep_level', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='任务的层级'),
    sa.Column('priority', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='任务优先级'),
    sa.Column('expect_execute_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='任务预期执行时间'),
    sa.Column('lasted_execute_time', sa.DateTime(timezone=True), nullable=True, comment='任务最终执行时间'),
    sa.Column('state', sa.Enum('initial', 'scheduled', 'enqueued', 'activating', 'pending', 'waiting', 'retrying', 'cancel', 'finish', 'failed', name='taskstate'), server_default='initial', nullable=False, comment='任务当前状态'),
    sa.Column('background', sa.Text(), nullable=False, comment='任务背景'),
    sa.Column('objective', sa.Text(), nullable=False, comment='任务目标'),
    sa.Column('details', sa.Text(), nullable=False, comment='任务的详细信息'),
    sa.Column('is_decomposed', sa.Boolean(), server_default=sa.text('0'), nullable=False, comment='已分解任务'),
    sa.Column('dependencies', sa.JSON(), server_default=sa.text('JSON_ARRAY()'), nullable=True, comment='同级任务依赖关系'),
    sa.Column('parent_id', sa.BigInteger(), nullable=True, comment='任务的父任务ID'),
    sa.Column('metadata_id', sa.BigInteger(), nullable=False, comment='任务的元信息ID'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='更新时间'),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True, comment='删除时间'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('0'), nullable=False, comment='0：未删除 1：已删除'),
    sa.ForeignKeyConstraint(['metadata_id'], ['tasks_metadata.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identifier'),
    comment='任务表'
    )
    op.create_index('idx_tasks_state_priority_time', 'tasks', ['state', 'priority', 'expect_execute_time'], unique=False)
    op.create_index(op.f('ix_tasks_created_at'), 'tasks', ['created_at'], unique=False)
    op.create_index(op.f('ix_tasks_deep_level'), 'tasks', ['deep_level'], unique=False)
    op.create_index(op.f('ix_tasks_expect_execute_time'), 'tasks', ['expect_execute_time'], unique=False)
    op.create_index(op.f('ix_tasks_is_deleted'), 'tasks', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_tasks_lasted_execute_time'), 'tasks', ['lasted_execute_time'], unique=False)
    op.create_index(op.f('ix_tasks_metadata_id'), 'tasks', ['metadata_id'], unique=False)
    op.create_index(op.f('ix_tasks_name'), 'tasks', ['name'], unique=False)
    op.create_index(op.f('ix_tasks_parent_id'), 'tasks', ['parent_id'], unique=False)
    op.create_index(op.f('ix_tasks_priority'), 'tasks', ['priority'], unique=False)
    op.create_index(op.f('ix_tasks_state'), 'tasks', ['state'], unique=False)
    op.create_index(op.f('ix_tasks_updated_at'), 'tasks', ['updated_at'], unique=False)
    op.create_table('tasks_audit',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.BigInteger(), nullable=False, comment='关联任务ID'),
    sa.Column('from_state', sa.Enum('initial', 'scheduled', 'enqueued', 'activating', 'pending', 'waiting', 'retrying', 'cancel', 'finish', 'failed', name='taskstate'), nullable=False, comment='任务执行状态'),
    sa.Column('to_state', sa.Enum('initial', 'scheduled', 'enqueued', 'activating', 'pending', 'waiting', 'retrying', 'cancel', 'finish', 'failed', name='taskstate'), nullable=False, comment='任务执行状态'),
    sa.Column('source', sa.Enum('user', 'admin', 'agent', 'worker', 'scheduler', 'monitor', name='taskauditsource'), nullable=False, comment='触发变更的来源'),
    sa.Column('source_context', sa.Text(), nullable=False, comment='变更来源的上下文信息, 如 user_id, worker_id 等等 ..'),
    sa.Column('comment', sa.Text(), nullable=False, comment='变更上下文的注释, 为什么要变更. 变更背景是什么 ..'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='更新时间'),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True, comment='删除时间'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('0'), nullable=False, comment='0：未删除 1：已删除'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='任务状态审计表'
    )
    op.create_index('idx_tasks_audit_task_id_created_at', 'tasks_audit', ['task_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_tasks_audit_created_at'), 'tasks_audit', ['created_at'], unique=False)
    op.create_index(op.f('ix_tasks_audit_from_state'), 'tasks_audit', ['from_state'], unique=False)
    op.create_index(op.f('ix_tasks_audit_is_deleted'), 'tasks_audit', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_tasks_audit_source'), 'tasks_audit', ['source'], unique=False)
    op.create_index(op.f('ix_tasks_audit_task_id'), 'tasks_audit', ['task_id'], unique=False)
    op.create_index(op.f('ix_tasks_audit_to_state'), 'tasks_audit', ['to_state'], unique=False)
    op.create_index(op.f('ix_tasks_audit_updated_at'), 'tasks_audit', ['updated_at'], unique=False)
    op.create_table('tasks_chat',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.BigInteger(), nullable=False, comment='关联任务ID'),
    sa.Column('role', sa.Enum('user', 'system', 'assistant', name='messagerole'), nullable=False, comment='发送消息的角色'),
    sa.Column('message', sa.Text(), nullable=False, comment='对话消息'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='更新时间'),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True, comment='删除时间'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('0'), nullable=False, comment='0：未删除 1：已删除'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='任务聊天记录表'
    )
    op.create_index('idx_tasks_chat_task_role', 'tasks_chat', ['task_id', 'role'], unique=False)
    op.create_index(op.f('ix_tasks_chat_created_at'), 'tasks_chat', ['created_at'], unique=False)
    op.create_index(op.f('ix_tasks_chat_is_deleted'), 'tasks_chat', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_tasks_chat_role'), 'tasks_chat', ['role'], unique=False)
    op.create_index(op.f('ix_tasks_chat_task_id'), 'tasks_chat', ['task_id'], unique=False)
    op.create_index(op.f('ix_tasks_chat_updated_at'), 'tasks_chat', ['updated_at'], unique=False)
    op.create_table('tasks_history',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.BigInteger(), nullable=False, comment='关联任务ID'),
    sa.Column('state', sa.Enum('initial', 'scheduled', 'enqueued', 'activating', 'pending', 'waiting', 'retrying', 'cancel', 'finish', 'failed', name='taskstate'), nullable=False, comment='任务执行状态'),
    sa.Column('process', sa.Text(), nullable=False, comment='任务执行过程'),
    sa.Column('thinking', sa.Text(), nullable=False, comment='Agent 的思考过程'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='更新时间'),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True, comment='删除时间'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('0'), nullable=False, comment='0：未删除 1：已删除'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='任务历史记录表'
    )
    op.create_index('idx_tasks_history_task_state', 'tasks_history', ['task_id', 'state'], unique=False)
    op.create_index(op.f('ix_tasks_history_created_at'), 'tasks_history', ['created_at'], unique=False)
    op.create_index(op.f('ix_tasks_history_is_deleted'), 'tasks_history', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_tasks_history_state'), 'tasks_history', ['state'], unique=False)
    op.create_index(op.f('ix_tasks_history_task_id'), 'tasks_history', ['task_id'], unique=False)
    op.create_index(op.f('ix_tasks_history_updated_at'), 'tasks_history', ['updated_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tasks_history_updated_at'), table_name='tasks_history')
    op.drop_index(op.f('ix_tasks_history_task_id'), table_name='tasks_history')
    op.drop_index(op.f('ix_tasks_history_state'), table_name='tasks_history')
    op.drop_index(op.f('ix_tasks_history_is_deleted'), table_name='tasks_history')
    op.drop_index(op.f('ix_tasks_history_created_at'), table_name='tasks_history')
    op.drop_index('idx_tasks_history_task_state', table_name='tasks_history')
    op.drop_table('tasks_history')
    op.drop_index(op.f('ix_tasks_chat_updated_at'), table_name='tasks_chat')
    op.drop_index(op.f('ix_tasks_chat_task_id'), table_name='tasks_chat')
    op.drop_index(op.f('ix_tasks_chat_role'), table_name='tasks_chat')
    op.drop_index(op.f('ix_tasks_chat_is_deleted'), table_name='tasks_chat')
    op.drop_index(op.f('ix_tasks_chat_created_at'), table_name='tasks_chat')
    op.drop_index('idx_tasks_chat_task_role', table_name='tasks_chat')
    op.drop_table('tasks_chat')
    op.drop_index(op.f('ix_tasks_audit_updated_at'), table_name='tasks_audit')
    op.drop_index(op.f('ix_tasks_audit_to_state'), table_name='tasks_audit')
    op.drop_index(op.f('ix_tasks_audit_task_id'), table_name='tasks_audit')
    op.drop_index(op.f('ix_tasks_audit_source'), table_name='tasks_audit')
    op.drop_index(op.f('ix_tasks_audit_is_deleted'), table_name='tasks_audit')
    op.drop_index(op.f('ix_tasks_audit_from_state'), table_name='tasks_audit')
    op.drop_index(op.f('ix_tasks_audit_created_at'), table_name='tasks_audit')
    op.drop_index('idx_tasks_audit_task_id_created_at', table_name='tasks_audit')
    op.drop_table('tasks_audit')
    op.drop_index(op.f('ix_tasks_updated_at'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_state'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_priority'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_parent_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_name'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_metadata_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_lasted_execute_time'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_is_deleted'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_expect_execute_time'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_deep_level'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_created_at'), table_name='tasks')
    op.drop_index('idx_tasks_state_priority_time', table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_tasks_metadata_updated_at'), table_name='tasks_metadata')
    op.drop_index(op.f('ix_tasks_metadata_owner'), table_name='tasks_metadata')
    op.drop_index(op.f('ix_tasks_metadata_is_deleted'), table_name='tasks_metadata')
    op.drop_index(op.f('ix_tasks_metadata_created_at'), table_name='tasks_metadata')
    op.drop_index('idx_keywords_fulltext', table_name='tasks_metadata', mysql_prefix='FULLTEXT')
    op.drop_table('tasks_metadata')
    # ### end Alembic commands ###
